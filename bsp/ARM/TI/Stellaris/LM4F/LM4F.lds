/*
 * Copyright (c) 2020, Yahia Farghaly
 * All rights reserved.
 *
 * File:			lm4f.lds
 * Author:		Yahia Farghaly <yahiafarghaly@gmail.com>.
 * Description:	Linker description file for Stellaris LM4FXXX microcontrollers.
 */

OUTPUT_FORMAT("elf32-littlearm", "elf32-bigarm", "elf32-littlearm")
OUTPUT_ARCH(arm)
ENTRY(Reset_Handler) /* entry Point */

MEMORY {
    FLASH (rx)  : ORIGIN = 0x00000000, LENGTH = 256K
    RAM (rwx) : ORIGIN = 0x20000000, LENGTH = 32K
    STACK (rwx) : ORIGIN = 0x20007FFF , LENGTH = 0x00000000
}

/* The used stack size of the application. */
STACK_SIZE = 512;

/* The used heap size of the application. */
HEAP_SIZE = 0;

/*
* Sections Layout:
*
*
*	FLASH
*	-----------------
* 	| .NVIC_TABLE	|
* 	| .text*		|
* 	| .rodata*		|
*   | .data			|
* 	-----------------
*
* 	RAM
* 	-------------------------
* 	| .data* @ 0x20000000	|
* 	| .vtable				|
* 	| .bss*					|
* 	| .heap					|
* 	|						|
* 	|						|
* 	|						|
* 	| .stack @ 0x20007FFF 	|
* 	-------------------------
*
*/

SECTIONS {

    .text : {
     /* NVIC Vector Table must start @0x0 */
        KEEP(*(.NVIC_TABLE))
     /* Machine Instructions of your application code */
        *(.text)
        *(.text*)
     /* Read-only data */
        *(.rodata)
        *(.rodata*)
	/* For GNU ARM Linker to be happy about not overlapping .init LMA */
        KEEP (*(.init))
        KEEP (*(.fini))

        . = ALIGN(4);
    } >FLASH

	/* For GNU ARM Linker to be happy about not overlapping .init LMA */
    .preinit_array : {
        PROVIDE_HIDDEN (__preinit_array_start = .);
        KEEP (*(.preinit_array*))
        PROVIDE_HIDDEN (__preinit_array_end = .);
    } >FLASH

    .init_array : {
        PROVIDE_HIDDEN (__init_array_start = .);
        KEEP (*(SORT(.init_array.*)))
        KEEP (*(.init_array*))
        PROVIDE_HIDDEN (__init_array_end = .);
    } >FLASH

    .fini_array : {
        PROVIDE_HIDDEN (__fini_array_start = .);
        KEEP (*(.fini_array*))
        KEEP (*(SORT(.fini_array.*)))
        PROVIDE_HIDDEN (__fini_array_end = .);
    } >FLASH

	/* Store the end address of the .text section */
    _etext = .;

    .data :  AT (_etext) {				/* Places the .data section after the .text section directly. */
        __data_load = LOADADDR (.data); /* .data section start address in the FLASH Memory. */
        __data_start__ = .;				/* .data section start address in the RAM	Memory. */
        *(.data)
        *(.data*)
        *(vtable)           			/* vtable it's generated by stellarisware to store the NVIC table in ram */
        . = ALIGN(4);
        __data_end__ = .;
    } >RAM

    .bss : {
        __bss_start__ = .;
        *(.bss)
        *(.bss*)
        *(COMMON)
        . = ALIGN(4);
        __bss_end__ = .;
    } >RAM

    .heap : {
        __heap_start__ = .;
        . = . + HEAP_SIZE;
        . = ALIGN(4);
        __heap_end__ = .;
    } >RAM

    .stack : {
        __stack_start__ = .;	/* starts @ 0x20007FFF */
        __stack_end__ = . - STACK_SIZE;
    } >STACK

    /* Remove information from the standard libraries */
    /DISCARD/ : {
        libc.a ( * )
        libm.a ( * )
        libgcc.a ( * )
    }
}
